0.991
Changed buildSites output column headers to read UMIs and sonicLengths.
Added additional configuration flags to prepReads that control HMM matching.
Added demultiplex_seqRunID to configuration to track sequencing run ids and added corresponding database table to capture.
  seqRunID is carried in data objects from demultiplex through buildFragments.
Code optimizations for prepReads.
buildStdFragments updated to use UMIs for multiHitCluster abundance metric
  rather than fragment widths. abund column in multiHits replaced with UMIs.
0.992
Added tsv.gz outputs to modules createStdFragments and above.
0.993
Added list of read ids to multiHits.
Fixed output directory issue with callNearestGene.
0.994
Updated buildStdFrags to handle cases where no unique sites are found, only multihits.
0.995
Added transposon support; config - prepReads_HMMrequireTerminalTA.
Added transposon example config file.
0.996
Added barcodeAssocLinkers.R as a core module and added configuration to example configuration files.
Updated prepReads.R to consider UMIs when idetermining identical reads pairs. 
Added anchorReadRearrangements.R
0.997
Added anchorReadRearrangements.R
0.998
Restructured modules to use tmp/ directories within each module directory rather than a single output/tmp directory.
Added core module.
Added pander library requirement.
0.999
Updated ITR/LTR rearrangement functions using synthetic data.
1.00
Added modes to the confile.
Removed examples/ and provide single example of config and sampleConfig in software root directory.
Added prepReads_HMMmatchTerminalSeq to configFile - replaces CA and TA matching flags.
Added prepReads_useDefaultHMMsettings to configFile - uses data/hmms/*.settings values.
1.01
Fixed issue with buildStdFragments_minReadsPerFrag flag and sites with single fragments.
Added log collation for core module.
Core module now collates multihit results.
1.02
Fixed bug in core CPU scheduler.
1.10
Added requirement for cd-hit-est which is used by buildStdFrags.R to more quickly cluter leader sequences.
Modified multiple code blocks to increase processing speed.
Updated scheduler in the core module.
Added compressDataFiles option to the config file in order to increase processing speed by not compressing rds files.
1.20
Added bwa2 support.
Added new demultiplexing module.
Added support for read clustering.
Added pre-blat read filtering using bwa2.
1.35
Added additional blat options including on the fly OOC file generation.
Corrected break point standardization functions.
Updated UMI handeling.
Split UMI reporting in buildSites into rUMIs and fUMIs.
Added docker build files.
Added config test.
Added small data test.
1.36
Updated code that handeld UMI conflicts.
1.37
Fixed an issue with dual detections and chromosomes with more than one digit.
1.38
Fixed an issue in demultiplex.R involving the calculation of distinct read pairs.
1.39
Fixed an issue with read counting in demultiplex.R when collapsing identical read pairs.
1.40
Added duplicate read tracking rds file.
Corrected HMM read length filter.
Set random seeds.
1.41
Updated rUMI calculation
Corrected issue with dual detections in buildSites.R. Dual detection are now all moved to faux replicate zero
  though they can draw fragments from all replicates when being identified. 
Forced breakpoint standardization to work within position ids though this may already be handeled by gintools functions.
1.42
Updated config file.
Added replicate renaming from file option.
Added integration inspection tool to tools/ for studying individual events outside of AAVengeR.
1.43
Added new options to the configuration file.
Updated dual detection in buildSites.
Added new logging system.
Updated time stamps in job tables.
1.44
Added new logging
Corrected forced blat path
Added dual detection test and prep. scripts.
1.45
Updated standardization position function calls.
Added additional tests.
1.46
Rewrote buildSites.
Added multiple new options to config file.
Created a small test set of select hg38 sites.
1.47
Removed bwa support.
Updated database fuctions to archive xy compressed tsv files to database.
Added new select hg38 test sites.
1.48
Added .my.cnf patch to database calls.
prepReads code cleanup.
config file updates.
1.49
Added standardizeBy options for buildStdFragments.
Added parallelization for standardization with logging to make sure it takes place.
1.50
Fixed db upload issue in buildSites.
Fixed start time bug in core module.
Updated buildStdFragments to include reporting on number of fragment position shifts. 
Added buildStdFragments_standardizeBreakPositionsWithin to config file.
2.0.0
AvengeR freeze
2.0.1
Updated core resource balancing.
Added prepReads_forceAnchorReadStartSeq option emmulate intSiteCaller primerBit matching.
Added memory management monitor.
Added pipeline auto-kill at 98% memory usage.
2.0.2
Fixed memory leak in demultiplex.R when identifying unique read pairs.
Added more vectors and HMMs.
2.0.3
Fixed issues with predictPCRartifacts where it failed when blast failed to return any hits. Only affects AAV work.
2.1.0
Rewrote how LTR/ITR remnants are classified. 
Re-tooled core module load balancing.
Changed process ids in database uploads.
Added new config option to make other module CPU values match core CPU value.
Cleaned up code in core.R and lib (HMM matching).
Added new option sanity checks
Added automatic addtition of not critical use options to config file from provided config file.
2.1.1
Patched reconstructDBtable()
New version of anchorReadRearrangements.R
2.2.0
Added genome manager.
Added synthetic data builder.
Added test data sets.
Added defaults file and handler for missing parameters.
Added module overrides.
Added human gene list file.
Added COSMIC gene list.
Removed callNearestGenesFiltered.
Rebuilt database structure.
Added database over-write protections.
2.2.1
Changed the behavior of leader sequence captures.
Previously, additional NTs would be appended to captured leader sequences when anchor read alignments started 
beyond the first NT of trimmed reads. Now this behavior only occurs when prepReads_HMMmatchEnd is set to FALSE.
prepReads_HMMmatchEnd is set to TRUE for mode integrase and FALSE for mode AAV. 

Changed the behavior of buildStdFrags by first sorting leader sequences by frequency before passing to CD-HIT-EST.
CD-HIT-EST selects cluster representatives by both length and order in input files. By moving less common leader
sequences to the end of input files, commonly seen sequences are more likely to be selected as cluster representatives.

Added runBuildSynSeqDataBatch.R
2.2.2
Added buildStdFragments_clusterLeaderSeqs option and updated select modules to accomindate using '*' in addtion 
to integers to denote remnant sequence groupings.
2.3.0
Decreased default quality trimming threshold to Q10 and narrowed default trimming window.
Move BLAT indel tolerance to configuration file rather than hardcoding into the align module.
Changed default BLAT tile size and step size for increased sensitivity (runs slower).
Added new option to toggle mulitiHit read salvage (buildStdFragments_salvageMultiHitReads)
Moved integrase correction shift to options, set to zero to disable (buildSites_integraseCorrectionDist)
Patched data.frame(table()) bug in prepReads
Allow commenting out of lines with # character in sampleData files.
Replaced alignment percent id calculation with UCSC's scorePSL.pl script.
2.3.1
AAV update only - changed way max LTR trimming from pre-BWA filtering works.
