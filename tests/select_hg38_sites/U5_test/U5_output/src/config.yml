# AAVegneR configuration file.                                                  Key:
# This file contains settings and parameters for AAVengeR modules.               (*) evaluated if repReads_buildReadMaps_blastReconstruction = TRUE
# The mode parmater will automatically other set other parameters to their       (^) evaluated if leaderSeqHMM is a column in the sampleDetails file
#   optimal values depending on the selected mode. Selecting 'manual' results    (@) path relative to output directory 
#   in the configuration below being used as written.                            (!) other modudules need to be completed first.

mode: integrase                                                                 # [integrase, AAV, transposase, or manual] Software mode.

databaseConfigFile: /home/ubuntu/.my.cnf
databaseConfigGroup: AAVengeR                                                         # Database credential block name in ~/.my.cnf file. Set to none to disable.


Rscript: /usr/bin/Rscript                                                       # [file path] Path to Rscript interpreter.
softwareDir: /home/ubuntu/AAVengeR                                              # [file path] Path to AAVengeR software directory.

outputDir: U5_output

core_CPUs: 5
core_keepIntermediateFiles: TRUE

demultiplex_anchorReadsFile: U5_syn_R2.fastq.gz
demultiplex_adriftReadsFile: U5_syn_R1.fastq.gz
demultiplex_index1ReadsFile: U5_syn_I1.fastq.gz
demultiplex_sampleDataFile:  U5_sampleData.tsv
demultiplex_replicateMergingInstructions: none
demultiplex_level: unique
demultiplex_quickAlignFilter: FALSE                                              # (!) Designed for AAV work - will be slow for integrase work.
demultiplex_useAdriftReadUniqueLinkers: TRUE
demultiplex_requirePostUmiLinker: TRUE
demultiplex_requirePostUmiLinker_maxMismatch: 2

modules:
    - demultiplex
    - prepReads
    - alignReads
    - buildFragments
    - buildStdFragments
    - buildSites
    - callNearestGenes
    - annotateRepeats

# Additional parameters.
#~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~

compressDataFiles: FALSE
processAdriftReadLinkerUMIs: FALSE

demultiplex_CPUs: 5                                                            # [integer]   Number of CPUs to use for demultiplexing.
demultiplex_outputDir: demultiplex                                              # [character] Demultiplexing ouput directory name that will be created in the output directory.
demultiplex_seqRunID: none
demultiplex_RC_I1_barcodes: FALSE                                               # [boolean]   Use the reverse compliment of I1 barcode sequences found in [sampleConfigFile].
demultiplex_RC_I1_barcodes_auto: TRUE                                           # [boolean]   Attempt to automatically determine best setting for demultiplex_RC_I1_barcodes. Will override [demultiplex_RC_I1_barcodes].
demultiplex_qualtrim_code: '5'                                                  # [character] ASCII Q-score threshold to fail sliding window read quality trimming.
demultiplex_qualtrim_halfWidth: 5                                               # [integer]   Half width of sliding window used to evaluate base call scores.
demultiplex_qualtrim_events: 2                                                  # [integer]   Number of events within a sliding that need to fall below the min. score to trigger trimming.
demultiplex_qualtrim_minLength: 50                                              # [integer]   Minimum length of anchor and adrift reads post quality trimming.
demultiplex_correctGolayIndexReads: FALSE                                       # [boolean]   Correct Golay barcodes using Golay alogrithm. Requires Python2 and numPy module installed.
demultiplex_sequenceChunkSize: 300000                                           # [integer]   Chunk size to use when breaking sequencing data into chunks for parallel processing.
demultiplex_index1ReadMaxMismatch: 1                                            # [integer]   Max. number of mismatches allowed in I1 barcodes.
demultiplex_adriftReadLinkerBarcodeMaxMismatch: 1                               # [integer]   (evaluated if demultiplex_useAdriftReadUniqueLinkers = TRUE) Max. number of mismatches allowed in R1 unique linker sequences.
demultiplex_anchorReadStartSeq.maxMisMatch: 1                                   # [integer]   (evaluated if anchorReadStartSeq column provided in sampleData file) Max. number of mismatches allowed in anchor read start sequences.
demultiplex_exportFASTQ: FALSE                                                  # [bollean]   Export demultiplexed reads as FASTQ to the demultiplex output folder.
demultiplex_mergeSimilarReadPairsParams: >-                                     # [string]    CD-HIT-EST parameters for clustering similiar read pairs.
  -c 0.98 -d 0 -M 0 -G 1 -aS 0.98 -aL 0.98 -s 0.98 -n 10 -gap -1000
demultiplex_quickAlignFilter_minPercentID: 97                                   # 
demultiplex_quickAlignFilter_minMatches: 30
demultiplex_quickAlignFilter_minEstLeaderSeqLength: 15


prepReads_CPUs: 5                                                               # [integer]   Number of CPUs to use when preparing reads for alignment to a reference genome.
prepReads_outputDir: prepReads                                                  # [character] prepReads ouput directory name that will be created in the output directory.
prepReads_readsTable:  demultiplex/reads.rds                                    # [file path] (@) Path to input reads data object created by demultiplex.R.
prepReads_mergeSimilarReadPairs: TRUE
prepReads_excludeAnchorReadVectorHits: TRUE                                     # [boolean]   Exclude anchor reads whoes ends align strongly to the vector sequence.
prepReads_excludeAdriftReadVectorHits: FALSE                                    # [boolean]   Exclude adrift reads whoes ends align strongly to the vector sequence.
prepReads_vectorAlignmentTestLength: 25                                         # [integer]   Length of NTs to from ends of reads to align to vectors to test for vector alignments.
prepReads_vectorAlignmentTest_minPercentCoverage: 90                            # [float]     Min. percent of {prepReads_vectorAlignmentTestLength} required for a vector test alignment to be considered. 
prepReads_vectorAlignmentTest_minPercentID: 90                                  # [float]     Min. percent seq id required for a vector test alignment to be considered. 
prepReads_minAnchorReadLength: 20                                               # [integer]   Min. length of anchor read post trim. Shorter reads would likely not align well to reference genomes.
prepReads_minAdriftReadLength: 20                                               # [integer]   Min. length of adrift read post trim. Shorter reads would likely not align well to reference genomes.
prepReads_buildReadMaps_blastReconstruction: TRUE                               # [boolean]   Use local alignments or reads to vector sequences to build leader sequence models. 
prepReads_mapLeaderSeqsMinAlignmentLength: 15                                   # [integer]   (*) min. length of local alignment to vector used when building leader seq models.
prepReads_mapLeaderSeqsMinPercentID: 95                                         # [float]     (evaluated if repReads_buildReadMaps_blastReconstruction = TRUE) min. % seq id of local alignment to vector used when building leader seq models.
prepReads_mapLeaderSeqsMaxGapBetweenAlignments: 5                               # [integer]   The max. distanct between local alignments to vector sequences that can be merged into single repLeader sequences.
prepReads_buildReadMaps_minMapStartPostion: 5                                   # [integer]   (if prepReads_buildReadMaps_blastReconstruction = FALSE) Use the best alignment begining at a position <= this value as the leader seque model.
prepReads_useDefaultHMMsettings: TRUE                                           # [boolean]   Use the default HMM settings, overrides other HMM settings in this configuration file.
prepReads_HMMsearchReadStartPos: 1                                              # [integer]   (^) Read start position of region to be evaluated by HMM.
prepReads_HMMsearchReadEndPos:  100                                             # [integer]   (^) Read end position of region to be evaluated by HMM.
prepReads_HMMmaxStartPos: 5                                                     # [integer]   (^) Max position on anchor read that a HMM hit can begin.
prepReads_HMMminFullBitScore: 20                                                # [float]     (^) Min. HMM score for a leader sequence to be considered.
prepReads_HMMmatchEnd: TRUE                                                     # [boolean]   (^) Require a match to the end of the HMM profile. 
prepReads_HMMmatchTerminalSeq: CA                                               # [character] (^) Required NTs at the end of HMM hits. Enter 'none' to disable.
prepReads_limitLeaderSeqsWithQuickAlignFilter: TRUE                             # [boolean]   Always set to FALSE for non-AAV work. Reccomended for AAV work.
prepReads_additionalAnchorReadOverReadingSeqs: none
prepReads_cutAdaptErrorRate: 0.15


alignReads_CPUs: 5                                                            # [integer]   Number of CPUs to use when aligning reads to a reference genome.
alignReads_outputDir: alignReads                                                # [character] alignReads ouput directory name that will be created in the output directory.
alignReads_inputFile: prepReads/reads.rds                                       # [file path] (@) Path to input reads RDS file.
alignReads_aligner: blat
alignReads_blat_fastMap: FALSE
alignReads_blatUseOocFile: FALSE
alignReads_genomeAlignment_anchorRead_maxStartPos: 3                            # [integer]   Max. start position along trimmed anchor reads that an alignment can begin. (!) Set to a small value such as 3 when using HMMs, large value such as 250 for AAV analyses.
alignReads_genomeAlignment_adriftRead_maxStartPos: 3                            # [integer]   Max. start position along trimmed adrift reads that an alignment can begin.
alignReads_genomeAlignment_minPercentID: 99                                     # [float]     Min. % seq id required to accept an alignment to the reference genome.
alignReads_genomeAlignment_blatStepSize: 9                                      # [integer]   BLAT step size parameter. BLAT default 9.
alignReads_genomeAlignment_blatTileSize: 11                                     # [integer]   BLAT tile size parameter. BLAT default 11.
alignReads_genomeAlignment_blatRepMatch: 1024                                   # [integer]   BLAT repMatch parameter. Number of times a tile needs to be seen before masking.
alignReads_genomeAlignment_anchorReadEnd_maxUnaligned: 5                        # [integer]   Max. number of NTs at the end of anchor reads not aligning to the genome.
alignReads_genomeAlignment_adriftReadEnd_maxUnaligned: 5                        # [integer]   Max. number of NTs at the end of adrift reads not aligning to the genome.
                                                                                #             This value should be generous for AAV analysis, eg. 10, since ITR remnants can not always be fully modeled
                                                                                #             and trimmed before aligning to genomes. Unlaligned NTs may arise from over-reading into poorly ITR remnants.

                                                                                # (@) path relative to output directory
buildFragments_CPUs: 5                                                          # [integer]   Number of CPUs to use when generating initial fragments.
buildFragments_outputDir: buildFragments                                        # [character] buildFragments ouput directory name that will be created in the output directory.
buildFragments_duplicateReadFile: prepReads/duplicateReads.rds                  # [file path] (@)(optional) Path to input duplicate reads RDS file. Typically created by prepReads module.
buildFragments_anchorReadsAlignmentFile: alignReads/anchorReadAlignments.rds    # [file path] (@)Path to anchor reads alignment data RDS file.
buildFragments_adriftReadsAlignmentFile: alignReads/adriftReadAlignments.rds    # [file path] (@)Path to adrift reads alignment data RDS file.
buildFragments_idGroup_size: 500                                                # [integer]   Number of read ids to group into initial fragments at one time. Grouping prevents overloading join functions.
buildFragments_maxReadAlignments: 1500                                          # [integer]   Max. number of alignments allowed for a given sequencing read. If both the anchor and adrift read in a pair exceed this value, the software will subsample alignments.
buildFragments_salvageReadsBeyondMaxNumAlignments: FALSE
buildFragments_minFragLength: 20                                                # [integer]   Min. length allowed for a fragment.
buildFragments_maxFragLength: 3000                                              # [integer]   Max. length allowed for a fragment.
buildFragments_randomLinkerID_minReadCountToSegreagate: 10                      # [integer]   When testing random linker ids for sample crossover, only consider resolving crossovers if a random id was seen this many times.
buildFragments_randomLinkerID_minSingleSampleMajorityPercent: 90                # [integer]   When testing random linker ids for sample crossover, a single sample must have this majority percentage for a correction to occur.


buildStdFragments_CPUs: 5                                                      # [integer]   Number of CPUs to use when generating standardized fragments.
buildStdFragments_inputFile: buildFragments/fragments.rds                       # [file path relative to output path] Path to initial fragment RDS file (ouput of buildFragments module).
buildStdFragments_outputDir: buildStdFragments
buildStdFragments_remnantClusterParams: >-
  -c 0.85 -d 0 -M 0 -G 1 -aS 0.90 -aL 0.90 -s 0.90 -n 4
buildStdFragments_autoPullTrialSamples: FALSE                                   # [boolean]   Automatically pull additional trial samples from the database to co-standardize with data found in buildStdFragments_inputFile.
buildStdFragments_trialSubjectList: none                                        # Format:  trial;subject|trial;subject, eg. 'Sabatino;pM50|Sabatino;pLinus'
buildStdFragments_randomIDdupReadMult: 3                                        # [integer]   When evaluating UMI sequences, if the most common position id associated with anUMI is x times larger than the second most common position then all positions assoicated with an UMI are switched to the dominate position.
buildStdFragments_randomIDdupAbundMult: 2                                       # [integer]   When evaluating UMI sequences, if the most common position id associated with an UMI has a sonicLength abundance x times larger than the second most common position then all positions assoicated with an UMI are switched to the dominate position.
buildStdFragments_standardizeIntegrationPositions: TRUE
buildStdFragments_standardizeBreakPositions: TRUE
buildStdFragments_intSiteStdWindowWidth: 5                                      # [integer]   Half width of window centered on each intSite when looking for other sites to merge.
buildStdFragments_breakPointStdWindowWidth: 3                                   # [integer]   Half width of window centered on each sonic break when looking for other break points to merge.
buildStdFragments_minReadsPerFrag: 1                                            # [integer]   Min number of reads required to reatin a UMI specific fragment.
buildStdFragments_createMultiHitClusters: TRUE                                  # [boolean]   Create networks of sites for reads that align well to multiple locations in a reference genome.
buildStdFragments_UMIminPercentReads: 15


buildSites_CPUs: 5
buildSites_inputFile: buildStdFragments/stdFragments.rds
buildSites_outputDir: buildSites
buildSites_enableDualDetection: TRUE
buildSites_dualDetectWidth: 6
buildSites_sumSonicBreaksWithin: samples                                        # [samples, replicates]

predictPCRartifacts_CPUs: 5
predictPCRartifacts_inputFile: core/sites.rds
predictPCRartifacts_outputDir: predictPCRartifacts
predictPCRartifacts_adjacentSeqLength: 14
predictPCRartifacts_minReportHalfMatches: 5
predictPCRartifacts_minReportMatches: 10
predictPCRartifacts_maxAlnGaps: 1
predictPCRartifacts_wordSize: 5
predictPCRartifacts_gapOpeningPenalty: 10
predictPCRartifacts_gapExtensionPenalty: 5
predictPCRartifacts_addAfter: posid

                                                                                # (!) mapSiteLeaderSequences 
buildAAVremnantPlots_outputDir: buildAAVremnantPlots                            # [character] buildAAVremnantPlots ouput directory name that will be created in the output directory.
buildAAVremnantPlots_inputFile: mapSiteLeaderSequences/sites.rds                # [file path] (@) path to the input site data which must have already passed through the mapSiteLeaderSequences module.
buildAAVremnantPlots_NTbinSize: 3
buildAAVremnantPlots_ITRlength: 197
buildAAVremnantPlots_ITRseqStart: 57
buildAAVremnantPlots_ITRdumbellTip1: 125
buildAAVremnantPlots_ITRdumbellTip2: 147
buildAAVremnantPlots_plotOutputWidthInches: 10

                                                                                # (@) path relative to output directory
barcodeAssocLinkers_outputDir: barcodeAssocLinkers                              # [character] barcodeAssocLinkers ouput directory name that will be created in the output directory.
barcodeAssocLinkers_sampleDataFile:  data/sampleData.tsv                        # [file path] (@) sampleData file path.
barcodeAssocLinkers_adriftReadsFile: data/Undetermined_S0_R1_001.fastq.gz       # [file path] (@) Adrift read FASTQ path.
barcodeAssocLinkers_index1ReadsFile: data/Undetermined_S0_I1_001.fastq.gz       # [file path] (@) I1 barcode read FASTQ path.
barcodeAssocLinkers_nCodes: 50                                                  # [integer]   Number of most abundant I1 barcodes to examine.
barcodeAssocLinkers_excludePolyG_index1BarCodes: TRUE                           # [boolean]   Exclude I1 barcodes that contain GGGGG (most likely PhiX).
barcodeAssocLinkers_adriftReadUniqueLinkerLength: 20                            # [integer]   First n NTs of adrift read NTs to consider as a unique linker sequence.


anchorReadRearrangements_CPUs: 5
anchorReadRearrangements_outputDir: anchorReadRearrangements
anchorReadRearrangements_readsTable: core/demultiplex/reads.rds
anchorReadRearrangements_abundSeqMinCount: 10
anchorReadRearrangements_minAnchorReadLength: 25
anchorReadRearrangements_minAdriftReadLength: 25
anchorReadRearrangements_seqsMinPercentID: 95
anchorReadRearrangements_seqsMinAlignmentLength: 15
anchorReadRearrangements_seqsMaxGaps: 1
anchorReadRearrangements_minAllowableGap: 5
anchorReadRearrangements_removeTailingUnknownSegments: FALSE

addSampleDetails_inputFile:  callNearestGenesFiltered/sites.rds
addSampleDetails_detailsFile: data/sampleDetails.tsv
addSampleDetails_addAfter: sample

annotateRepeats_CPUs: 5
annotateRepeats_inputFile: callNearestGenes/sites.rds
annotateRepeats_outputDir: annotateRepeats
annotateRepeats_addAfter: nRepsObs

mapSiteLeaderSequences_CPUs: 5
mapSiteLeaderSequences_outputDir: mapSiteLeaderSequences
mapSiteLeaderSequences_inputFile: core/sites.rds
mapSiteLeaderSequences_addAfter: repLeaderSeq
mapSiteLeaderSequences_minAllowableGap: 5                                       # Min. space between blast hits allowed. Larger gaps will be filled with [x].
mapSiteLeaderSequences_alignmentChunkSize: 5000
mapSiteLeaderSequences_minAlignmentPercentID: 90
mapSiteLeaderSequences_minAlignmentLength: 15

callNearestGenes_CPUs: 5
callNearestGenes_inputFile: buildSites/sites.rds
callNearestGenes_outputDir: callNearestGenes
callNearestGenes_addAfter: nRepsObs
callNearestGenes_TU_position: either
callNearestGenes_boundaries:
  hg38:
    TUs:   hg38.TUs.rds
    exons: hg38.exons.rds
  sacCer3:
        TUs:   sacCer3.TUs.rds
        exons: sacCer3.exons.rds
  canFam3:
        TUs:   canFam3.humanXeno.TUs.rds
        exons: canFam3.humanXeno.exons.rds
  macFas5:
        TUs:   macFas5.humanXeno.TUs.rds
        exons: macFas5.humanXeno.exons.rds


callNearestGenesFiltered_CPUs: 5
callNearestGenesFiltered_columnPrefix: oncoGenes
callNearestGenesFiltered_inputFile: annotateRepeats/sites.rds
callNearestGenesFiltered_outputDir: callNearestGenesFiltered
callNearestGenesFiltered_addAfter: repeat_class
callNearestGenesFiltered_TU_position: either
callNearestGenesFiltered_boundaries:
  hg38:
    TUs:   hg38.TUs.rds
    exons: hg38.exons.rds
    filter: hg38.Bushman.oncoGeneList.rds
  sacCer3:
        TUs:   sacCer3.TUs.rds
        exons: sacCer3.exons.rds
        filter: hg38.Bushman.oncoGeneList.rds
  canFam3:
        TUs: canFam3.humanXeno.TUs.rds
        exons: canFam3.humanXeno.exons.rds
        filter: hg38.Bushman.oncoGeneList.rds
  macFas5:
        TUs:   macFas5.humanXeno.TUs.rds
        exons: macFas5.humanXeno.exons.rds
        filter: hg38.Bushman.oncoGeneList.rds
